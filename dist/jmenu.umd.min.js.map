{"version":3,"file":"jmenu.umd.min.js","sources":["../node_modules/eyeejs/dist/eye.esm.js","../src/jmenu.js"],"sourcesContent":["/**\r\n * @typedef {Object} AttrMap\r\n * @property {HTMLDivElement} parent - append newly created element to a parent\r\n * @property {Array<String>|String} class - class or array of classes to set\r\n * @property {String} id - set element ID\r\n * @property {Object} data - dataset values to set\r\n * @property {String} text - set element text\r\n * @property {String} html - set element html\r\n */\r\n\r\n/**\r\n * Returns the associated class event of that event\r\n * example: for click event it returns new MouseEvent(\"click\")\r\n * @param {string} ev \r\n */\r\nfunction getEvent(type, options = {}) {\r\n  switch (type) {\r\n    // Mouse Events\r\n    case 'click':\r\n    case 'dblclick':\r\n    case 'mousedown':\r\n    case 'mouseup':\r\n    case 'mousemove':\r\n    case 'mouseenter':\r\n    case 'mouseleave':\r\n    case 'mouseover':\r\n    case 'mouseout':\r\n      return new MouseEvent(type, options);\r\n\r\n    // Pointer Events\r\n    case 'pointerdown':\r\n    case 'pointerup':\r\n    case 'pointermove':\r\n    case 'pointerenter':\r\n    case 'pointerleave':\r\n    case 'pointerover':\r\n    case 'pointerout':\r\n      return new PointerEvent(type, options);\r\n\r\n    // Keyboard Events\r\n    case 'keydown':\r\n    case 'keyup':\r\n    case 'keypress':\r\n      return new KeyboardEvent(type, options);\r\n\r\n    // Focus Events\r\n    case 'focus':\r\n    case 'blur':\r\n    case 'focusin':\r\n    case 'focusout':\r\n      return new FocusEvent(type, options);\r\n\r\n    // Input & Form Events\r\n    case 'input':\r\n    case 'change':\r\n    case 'submit':\r\n    case 'reset':\r\n      return new Event(type, options);\r\n\r\n    // Wheel\r\n    case 'wheel':\r\n      return new WheelEvent(type, options);\r\n\r\n    // Clipboard\r\n    case 'copy':\r\n    case 'cut':\r\n    case 'paste':\r\n      return new ClipboardEvent(type, options);\r\n\r\n    // UI\r\n    case 'scroll':\r\n    case 'resize':\r\n      return new UIEvent(type, options);\r\n\r\n    // Default: fallback to generic Event\r\n    default:\r\n      return new CustomEvent(type, options);\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {EyeElement & {\r\n *  refresh: (attrs: AttrMap) => ModelEyeElement\r\n * }} ModelEyeElement eye element definition for model elements\r\n */\r\n\r\nconst events = [\r\n  // Mouse Events\r\n  \"click\",\r\n  \"dblclick\",\r\n  \"mousedown\",\r\n  \"mouseup\",\r\n  \"mousemove\",\r\n  \"mouseenter\",\r\n  \"mouseleave\",\r\n  \"mouseover\",\r\n  \"mouseout\",\r\n  \"contextmenu\",\r\n\r\n  // Keyboard Events\r\n  \"keydown\",\r\n  \"keypress\", // Deprecated\r\n  \"keyup\",\r\n\r\n  // Focus Events\r\n  \"focus\",\r\n  \"blur\",\r\n  \"focusin\",\r\n  \"focusout\",\r\n\r\n  // Form Events\r\n  \"submit\",\r\n  \"change\",\r\n  \"input\",\r\n  \"reset\",\r\n  \"select\",\r\n\r\n  // Touch Events (for mobile)\r\n  \"touchstart\",\r\n  \"touchend\",\r\n  \"touchmove\",\r\n  \"touchcancel\",\r\n\r\n  // Pointer Events\r\n  \"pointerdown\",\r\n  \"pointerup\",\r\n  \"pointermove\",\r\n  \"pointerenter\",\r\n  \"pointerleave\",\r\n  \"pointercancel\",\r\n\r\n  // Drag and Drop Events\r\n  \"dragstart\",\r\n  \"dragend\",\r\n  \"dragenter\",\r\n  \"dragover\",\r\n  \"dragleave\",\r\n  \"drop\",\r\n\r\n  // Window/Document Events\r\n  \"resize\",\r\n  \"scroll\",\r\n  \"load\",\r\n  \"beforeunload\",\r\n  \"unload\",\r\n\r\n  // Media Events\r\n  \"play\",\r\n  \"pause\",\r\n  \"ended\",\r\n  \"volumechange\",\r\n  \"timeupdate\",\r\n\r\n  // Clipboard Events\r\n  \"copy\",\r\n  \"cut\",\r\n  \"paste\",\r\n\r\n  // Animation and Transition Events\r\n  \"animationstart\",\r\n  \"animationend\",\r\n  \"animationiteration\",\r\n  \"transitionstart\",\r\n  \"transitionend\",\r\n\r\n  // Mutation Events\r\n  \"DOMSubtreeModified\",\r\n  \"DOMNodeInserted\",\r\n  \"DOMNodeRemoved\",\r\n\r\n  // Other Events\r\n  \"error\",\r\n  \"hashchange\",\r\n  \"popstate\",\r\n];\r\n\r\nconst htmlElements = [\r\n  // Metadata\r\n  \"<base>\",\r\n  \"<head>\",\r\n  \"<link>\",\r\n  \"<meta>\",\r\n  \"<style>\",\r\n  \"<title>\",\r\n\r\n  // Sections\r\n  \"<body>\",\r\n  \"<address>\",\r\n  \"<article>\",\r\n  \"<aside>\",\r\n  \"<footer>\",\r\n  \"<header>\",\r\n  \"<h1>\",\r\n  \"<h2>\",\r\n  \"<h3>\",\r\n  \"<h4>\",\r\n  \"<h5>\",\r\n  \"<h6>\",\r\n  \"<main>\",\r\n  \"<nav>\",\r\n  \"<section>\",\r\n\r\n  // Text content\r\n  \"<blockquote>\",\r\n  \"<dd>\",\r\n  \"<div>\",\r\n  \"<dl>\",\r\n  \"<dt>\",\r\n  \"<figcaption>\",\r\n  \"<figure>\",\r\n  \"<hr>\",\r\n  \"<li>\",\r\n  \"<ol>\",\r\n  \"<p>\",\r\n  \"<pre>\",\r\n  \"<ul>\",\r\n\r\n  // Inline text semantics\r\n  \"<a>\",\r\n  \"<abbr>\",\r\n  \"<b>\",\r\n  \"<bdi>\",\r\n  \"<bdo>\",\r\n  \"<br>\",\r\n  \"<cite>\",\r\n  \"<code>\",\r\n  \"<data>\",\r\n  \"<dfn>\",\r\n  \"<em>\",\r\n  \"<i>\",\r\n  \"<kbd>\",\r\n  \"<mark>\",\r\n  \"<q>\",\r\n  \"<rp>\",\r\n  \"<rt>\",\r\n  \"<ruby>\",\r\n  \"<s>\",\r\n  \"<samp>\",\r\n  \"<small>\",\r\n  \"<span>\",\r\n  \"<strong>\",\r\n  \"<sub>\",\r\n  \"<sup>\",\r\n  \"<time>\",\r\n  \"<u>\",\r\n  \"<var>\",\r\n  \"<wbr>\",\r\n\r\n  // Image and multimedia\r\n  \"<area>\",\r\n  \"<audio>\",\r\n  \"<img>\",\r\n  \"<map>\",\r\n  \"<track>\",\r\n  \"<video>\",\r\n\r\n  // Embedded content\r\n  \"<embed>\",\r\n  \"<iframe>\",\r\n  \"<object>\",\r\n  \"<picture>\",\r\n  \"<portal>\",\r\n  \"<source>\",\r\n\r\n  // Scripting\r\n  \"<canvas>\",\r\n  \"<noscript>\",\r\n  \"<script>\",\r\n\r\n  // Demarcating edits\r\n  \"<del>\",\r\n  \"<ins>\",\r\n\r\n  // Table content\r\n  \"<caption>\",\r\n  \"<col>\",\r\n  \"<colgroup>\",\r\n  \"<table>\",\r\n  \"<tbody>\",\r\n  \"<td>\",\r\n  \"<tfoot>\",\r\n  \"<th>\",\r\n  \"<thead>\",\r\n  \"<tr>\",\r\n\r\n  // Forms\r\n  \"<button>\",\r\n  \"<datalist>\",\r\n  \"<fieldset>\",\r\n  \"<form>\",\r\n  \"<input>\",\r\n  \"<label>\",\r\n  \"<legend>\",\r\n  \"<meter>\",\r\n  \"<optgroup>\",\r\n  \"<option>\",\r\n  \"<output>\",\r\n  \"<progress>\",\r\n  \"<select>\",\r\n  \"<textarea>\",\r\n\r\n  // Interactive elements\r\n  \"<details>\",\r\n  \"<dialog>\",\r\n  \"<summary>\",\r\n\r\n  // Web components / scripting base\r\n  \"<slot>\",\r\n  \"<template>\",\r\n];\r\n\r\nfunction flat(word) {\r\n  let n = \"\";\r\n  for (let i = 0; i < word.length; i++) {\r\n    const t = word[i];\r\n    if (t === t.toUpperCase() && t !== t.toLowerCase()) n += \"-\" + t;\r\n    else n += t;\r\n  }\r\n  return n.toLowerCase();\r\n}\r\n\r\nconst localdata = new WeakMap();\r\n\r\n/**\r\n * cmcl stands for Create Model Children Layers, recursively creates model layers one by one\r\n * @param {EyeElement} parent\r\n * @param {Object} layer\r\n * @returns {Array<{name: string,set: (parent: EyeElement, value: String) =>}>}\r\n */\r\nfunction cmcl(parent, layer) {\r\n  let obj = [];\r\n  for (const key in layer) {\r\n    const subcontent = layer[key];\r\n    const [def, _set] = key.split(\":\");\r\n    const [tagName, ...cls] = def.split(\".\");\r\n    let [_set_name = null, _set_default = null] = (_set || \"\")\r\n      .split(\"-\")\r\n      .map((a) => a.trim());\r\n\r\n    let elm = eye(tagName.trim(), {\r\n      class: cls,\r\n      parent,\r\n      data: _set ? { value: _set_name } : undefined,\r\n    });\r\n\r\n    if (_set && _set_name) {\r\n      obj.push({\r\n        name: _set_name,\r\n        set(parent, value) {\r\n          let elm = parent.find(`[data-value=\"${_set_name}\"]`);\r\n          elm.textContent = value ?? _set_default;\r\n        }\r\n      });\r\n    }\r\n\r\n    // recursive\r\n    if (\r\n      subcontent &&\r\n      typeof subcontent === \"object\" &&\r\n      !(subcontent instanceof Array)\r\n    )\r\n      obj = obj.concat(cmcl(elm, subcontent));\r\n  }\r\n  return obj;\r\n}\r\n\r\nlet delegationEvents = [\"click\", \"submit\", \"input\", \"change\", \"keydown\", \"keyup\", \"keypress\", \"focusin\", \"focusout\", \"mouseover\", \"mouseout\"];\r\nlet normalSetterGetter = (action, v, elm) => v;\r\n\r\n/**\r\n * Eye wrapper offers a subset of functions that ease DOM minipulation! Power of JQuery with \r\n * some a modern design and a bunch of new functions.\r\n * @author Yousef Neji\r\n */\r\nclass EyeElement {\r\n  /**\r\n   * Raw html element\r\n   * @type {HTMLElement}\r\n   */\r\n  #raw = null;\r\n\r\n  /**\r\n   * Used to store delegated events listeners\r\n   * @type {Map<String,Set<{callback, target: string}>>}\r\n   */\r\n  #dlgListeners = new Map();\r\n\r\n  /**\r\n   * Custom way or modifier that redefine the way you set/get\r\n   * this element `textContent` or `value`:\r\n   * - access this feature from `.redefine` method.\r\n   */\r\n  #customSet = {\r\n    value: normalSetterGetter,\r\n    text: normalSetterGetter\r\n  };\r\n\r\n  /**\r\n   * Called internally to initiate the main EyeElement functionalities\r\n   * @method EyeElement#init\r\n   * @param {string|HTMLElement} selector\r\n   * @param {AttrMap} attrs\r\n   * @param {Object} css\r\n   * @returns {EyeElement}\r\n   */\r\n  constructor(selector, attrs, css) {\r\n    let _this = this;\r\n    if (selector instanceof HTMLElement) {\r\n      this.#raw = selector;\r\n    } else if (htmlElements.includes(selector)) {\r\n      // creating a new element\r\n      this.#raw = document.createElement(selector.substring(1, selector.length - 1));\r\n    } else {\r\n      // selecting\r\n      let s = selector.slice(-1) === \"!\";\r\n      this.#raw = document.querySelectorAll(s ? selector.slice(0, -1) : selector);\r\n\r\n      if (this.#raw.length == 0) return null; // we stop everything here\r\n      if (this.length == 1 || s) this.#raw = this.#raw.item(0);\r\n    }\r\n\r\n    /**\r\n     * Handler used to integrate delegation concept/algorithme\r\n     * @param {Event} e \r\n     */\r\n    function handler(e) {\r\n      let name = e.type,\r\n        listeners = _this.#dlgListeners,\r\n        _etarget = e.target,\r\n        me = this; // refers to the element being listening to the event\r\n\r\n      if (listeners.has(name)) {\r\n        let cbs = listeners.get(name);\r\n        cbs?.forEach(({ callback, target }) => {\r\n          if (_etarget.closest(target)) {\r\n            // we hitting the target\r\n            callback(e, me);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.each((elm, idx) => {\r\n      let parentElm = null;\r\n      if (attrs)\r\n        for (const key in attrs) {\r\n          const value = attrs[key];\r\n          if (key == \"class\")\r\n            elm.classList.add.apply(\r\n              elm.classList,\r\n              (value instanceof Array ? value : value.split(\" \")).filter(a => a != \"\")\r\n            );\r\n          else if (key == \"text\") elm.textContent = value;\r\n          else if (key == \"html\") elm.innerHTML = value;\r\n          else if (key == \"data\") for (const k in value) elm.dataset[k] = value[k];\r\n          else if (key == \"parent\") parentElm = value;\r\n          else if (key in elm) elm[key] = value;\r\n          else if (key[0] != \"_\") elm.setAttribute(key, elm); // we must ignore _ started keys 'cause they are used by models\r\n        }\r\n      if (css)\r\n        for (const key in css)\r\n          if (key.indexOf(\"-\") != -1) elm.style[key] = css[key];\r\n          else elm.style[flat(key)] = css[key];\r\n      if (parentElm instanceof EyeElement || parentElm instanceof HTMLElement) parentElm.append(elm);\r\n\r\n      // creating the delegation handling model\r\n      delegationEvents.forEach(ev => {\r\n        elm.addEventListener(ev, handler);\r\n      });\r\n    });\r\n\r\n    // creating/initiating events functions\r\n    events.forEach(ev => {\r\n      _this[ev] = function (cb) {\r\n        if (cb) {\r\n          if (typeof cb == \"function\") _this.on(ev, cb);\r\n        } else _this.trigger(ev);\r\n\r\n        return _this;\r\n      };\r\n    });\r\n\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Length of current selection\r\n   * @type {Number}\r\n   */\r\n  get length() {\r\n    return this.#raw instanceof NodeList ? this.#raw.length : 1;\r\n  }\r\n\r\n  /**\r\n   * Raw html element\r\n   * @type {HTMLElement}\r\n   */\r\n  get raw(){\r\n    return this.#raw;\r\n  }\r\n\r\n  /**\r\n   * Run(loop) through selected NodeList, or run a single call for one single element\r\n   * @method EyeElement#each\r\n   * @param {(elm: EyeElement, index: number, current: EyeElement)=>} cb \r\n   * @returns {EyeElement}\r\n   */\r\n  each(cb) {\r\n    (this.#raw instanceof NodeList ? [...this.#raw.entries()] : [[0, this.#raw]]).forEach(([idx, elm]) => {\r\n      cb(elm, idx, this);\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Set or get element html\r\n   * @method EyeElement#html\r\n   * @param {string} [html]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  html(html) {\r\n    let out = undefined;\r\n    this.each((elm, idx) => {\r\n      if (html === undefined) return out = elm.innerHTML;// getting the first one and exiting\r\n      elm.innerHTML = html;\r\n    });\r\n    return out != undefined ? out : this;\r\n  }\r\n  /**\r\n   * Set or get element text\r\n   * @method EyeElement#text\r\n   * @param {string} [text]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  text(text) {\r\n    let out = undefined;\r\n    this.each((elm, idx) => {\r\n      if (text === undefined) return out = this.#customSet.text(\"get\", elm.textContent, elm);\r\n      elm.textContent = this.#customSet.text(\"set\", text, elm);\r\n    });\r\n    return out != undefined ? out : this;\r\n  }\r\n  /**\r\n   * Set or get element's data values\r\n   * @method EyeElement#data\r\n   * @param {string} key\r\n   * @param {*} [value]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  data(key, value) {\r\n    if (!localdata.has(this)) localdata.set(this, {});\r\n    if (key) {\r\n      if (value != undefined) localdata.get(this)[key] = value;\r\n      else return localdata.get(this)[key];\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set or get an attribute value\r\n   * @method EyeElement#attr\r\n   * @param {string} name\r\n   * @param {*} [value]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  attr(name, value) {\r\n    let out = \"\";\r\n    this.each((elm, idx) => {\r\n      if (name.indexOf(\"data-\") === 0) {\r\n        let [key, val] = name.split(\"-\").map((a) => a.trim());\r\n        // modify data\r\n        if (value == undefined) return out = elm.dataset[val];\r\n        elm.dataset[val] = value;\r\n      } else {\r\n        if (name in elm) {\r\n          if (value == undefined) return out = elm[name];\r\n          elm[name] = value;\r\n        } else if (name[0] != \"_\") {\r\n          if (value == undefined) return out = elm.getAttribute(name)\r\n          elm.setAttribute(name, value);\r\n        }\r\n      }\r\n    });\r\n    return out ? out : this;\r\n  }\r\n  /**\r\n   * Super fancy class function that allows to modify class with different methods in one\r\n   * @method EyeElement#class\r\n   * @param {string} actions\r\n   * @returns {EyeElement|string}\r\n   */\r\n  class(actions) {\r\n    let out = undefined;\r\n    this.each((elm, idx) => {\r\n      if (typeof actions === \"number\") return out = elm.classList.item(actions);\r\n\r\n      actions.split(\" \").forEach((action) => {\r\n        if (action[0] == \"-\") {\r\n          elm.classList.remove(action.substring(1, action.length));\r\n        } else if (action[0] == \"%\") {\r\n          elm.classList.toggle(action.substring(1, action.length));\r\n        } else if (action[0] == \"?\") {\r\n          out = elm.classList.contains(action.substring(1, action.length));\r\n        } else if (action.indexOf(\"/\") != -1) {\r\n          [v1, v2] = action.split(\"/\");\r\n          elm.classList.replace(v1, v2);\r\n        } else {\r\n          elm.classList.add(action.substring(1, action.length));\r\n        }\r\n      });\r\n      if (out) return;\r\n    });\r\n\r\n    return out != undefined ? out : this;\r\n  }\r\n  /**\r\n   * Show/display the element\r\n   * @method EyeElement#show\r\n   * @param {string} cls\r\n   * @returns {EyeElement}\r\n   */\r\n  show(cls) {\r\n    this.each((elm, idx) => {\r\n      elm.style.display = cls ?? \"inline-block\";\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Hide the element\r\n   * @method EyeElement#hide\r\n   * @param {boolean} opacity whether to hide by making invisible?\r\n   * @returns {EyeElement}\r\n   */\r\n  hide(opacity) {\r\n    this.each((elm, idx) => {\r\n      if (opacity) elm.style.opacity = 0;\r\n      else elm.style.display = \"none\";\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Append one or more elements to the current element\r\n   * @method EyeElement#append\r\n   * @param {HTMLElement|Array<Node|EyeElement>} elm\r\n   * @param {\"next\" | \"after\" | \"previous\" | \"before\"} [pos] [optional]\r\n   * @returns {EyeElement}\r\n   */\r\n  append(elm, pos) {\r\n    let nodes = [];\r\n    (Array.isArray(elm) ? elm : [elm]).forEach(item => {\r\n      if (item instanceof EyeElement) nodes.push(item.#raw);\r\n      else if (item instanceof HTMLElement) nodes.push(item);\r\n    });\r\n    if (this.#raw instanceof NodeList) {\r\n      console.warn(`[EyeJS] beware while using .append with multi selected elements`);\r\n      this.#raw.forEach((itm, idx) => {\r\n        if (!nodes[idx]) return;\r\n        itm.append(nodes[idx]);\r\n      });\r\n      return this;\r\n    }\r\n    if (!pos) this.#raw.append(...nodes);\r\n    else\r\n      switch (pos) {\r\n        case \"next\":\r\n        case \"after\":\r\n          this.#raw.after(...nodes);\r\n          break;\r\n        case \"previous\":\r\n        case \"before\":\r\n          this.#raw.before(...nodes);\r\n          break;\r\n      }\r\n    return this;\r\n  }\r\n  /**\r\n   * Insert element after this one\r\n   * @method EyeElement#after\r\n   * @param {EyeElement|HTMLElement} elm \r\n   * @returns {EyeElement}\r\n   */\r\n  after(elm) {\r\n    (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw).after(elm);\r\n    return this;\r\n  }\r\n  /**\r\n   * Insert element before this one\r\n   * @method EyeElement#before\r\n   * @param {EyeElement|HTMLElement} elm \r\n   * @returns {EyeElement}\r\n   */\r\n  before(elm) {\r\n    (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw).before(elm);\r\n    return this;\r\n  }\r\n  /**\r\n   * Replace current element with the new element, or multiple elements with multiple selected elements\r\n   * @method EyeElement#replaceWith\r\n   * @param {...HTMLElement|EyeElement} elms\r\n   * @param {string} [pos] [optional]\r\n   * @returns {EyeElement}\r\n   */\r\n  replaceWith(...elms) {\r\n    let nodes = [];\r\n    (Array.isArray(elms) ? elms : [elms]).forEach(item => {\r\n      if (item instanceof EyeElement) nodes.push(item.#raw);\r\n      else if (item instanceof HTMLElement) nodes.push(item);\r\n    });\r\n    if (this.#raw instanceof NodeList) {\r\n      [...this.#raw.entries()].forEach(([idx, elm]) => {\r\n        if (!nodes[idx]) return;\r\n        elm.replaceWith(nodes[idx]);\r\n      });\r\n    } else {\r\n      this.#raw.replaceWith(...nodes);\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * Get current element parent or append it to one\r\n   * @method EyeElement#parent\r\n   * @param {HTMLElement|EyeElement} par\r\n   * @returns {EyeElement}\r\n   */\r\n  parent(par) {\r\n    if (par) {\r\n      if (!(par instanceof HTMLElement) && !(par instanceof EyeElement))\r\n        throw new Error(\r\n          \"[EyeJS] Unable to append current element to parent because it's not HTMLElement\"\r\n        );\r\n      this.each((elm, idx) => {\r\n        par.append(elm);\r\n      });\r\n      return this;\r\n    }\r\n    return eye(this.#raw instanceof NodeList ? this.#raw.item(0).parentElement : this.#raw.parentElement);\r\n  }\r\n  /**\r\n   * Returns whether current node is the same/equal(depending on `check`) as the passed node or not\r\n   * @method EyeElement#is\r\n   * @param {HTMLElement|EyeElement} node\r\n   * @param {\"connected\" | \"same\" | \"equal\"} [check] check type `same`, `equal`\r\n   * @returns {boolean}\r\n   */\r\n  is(node, check) {\r\n    node = node instanceof EyeElement ? node.#raw : node;\r\n    if (this.#raw instanceof NodeList) {\r\n      console.warn(`[EyeJS] .is is not functional with multi selected elements`);\r\n      return this;\r\n    }\r\n    if (node === \"connected\") return this.#raw.isConnected;\r\n    switch (check) {\r\n      case \"same\":\r\n        return this.#raw.isSameNode(node);\r\n      case \"equal\":\r\n        return this.#raw.isEqualNode(node);\r\n      default:\r\n        console.error(\r\n          `[EyeJS] Unknown check \"${check}\", possible values are [\"same\",\"equal\",\"connected\"]`\r\n        );\r\n        return false;\r\n    }\r\n  }\r\n  /**\r\n   * Set or get a css attribute\r\n   * @method EyeElement#css\r\n   * @param {string} attr\r\n   * @param {string|number} [value]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  css(attr, value) {\r\n    if (attr) {\r\n      let out = undefined;\r\n      attr = flat(attr);\r\n      this.each((elm, idx) => {\r\n        if (value === undefined) return out = elm.style[attr];\r\n        elm.style[attr] = value;\r\n      });\r\n      return out != undefined ? out : this;\r\n    } else return console.error(`[EyeJS] mission argument \"attr\" in function .css`);\r\n  }\r\n  /**\r\n   * Remove current element\r\n   * @method EyeElement#remove\r\n   * @returns {EyeElement}\r\n   */\r\n  remove() {\r\n    this.each((elm, idx) => {\r\n      elm.remove();\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * @overload\r\n   * @param {string} ev\r\n   * @param {function} cb\r\n   */\r\n  /**\r\n   * @overload\r\n   * @param {string} ev\r\n   * @param {string} trg optionally define a target element for the event\r\n   * @param {function} cb\r\n   *\r\n   */\r\n  /**\r\n   * Attach an listener/handler to specific event or events\r\n   * @method EyeElement#on\r\n   * @param {string} ev may contain multiple events separated by \" \"(space)\r\n   * @param {string|function} arg2 \r\n   * @param {function} [arg3]\r\n   * @returns {EyeElement|void}\r\n   */\r\n  on(ev, arg2, arg3) {\r\n    ev = ev.split(\" \");\r\n    let target = typeof arg2 === \"string\" ? arg2 : null;\r\n    let cb = typeof arg2 === \"function\" ? arg2 : arg3;\r\n    let _this = this;\r\n    if (typeof cb !== \"function\")\r\n      return console.error(\r\n        \"[EyeJS] .on method is missing the actuall callback `cb` or not of type function\"\r\n      );\r\n\r\n    let elms = (this.#raw instanceof NodeList ? [...this.#raw.entries()] : [[0, this.#raw]]);\r\n\r\n    let outsider = null;\r\n    ev.forEach(evt => {\r\n      if (target) {\r\n        if (!delegationEvents.includes(evt))\r\n          return outsider = evt; // outsider events \r\n\r\n        if (!_this.#dlgListeners.has(evt))\r\n          _this.#dlgListeners.set(evt, new Set());\r\n        _this.#dlgListeners.get(evt).add({ callback: cb, target });\r\n      } else {\r\n        elms.forEach(([idx, elm]) => {\r\n          elm.addEventListener(evt, cb);\r\n        });\r\n      }\r\n    });\r\n\r\n    if (outsider !== null)\r\n      return console.error(`[EyeJS] trying to use delegation for an inappropriate event \"${outsider}\"`);\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Remove event listener of a specific event\r\n   * @method EyeElement#off\r\n   * @param {string} ev \r\n   * @param {function} cb \r\n   * @returns {EyeElement|void}\r\n   */\r\n  off(ev, cb) {\r\n    let _this = this,\r\n      listeners = _this.#dlgListeners;\r\n    if (typeof cb != \"function\")\r\n      return console.error(\r\n        \"[EyeJS] .off method is missing the actuall callback `cb` or not of type function\"\r\n      );\r\n    ev = ev.split(\" \");\r\n\r\n    this.each((elm, idx) => {\r\n      ev.forEach(evt => elm.removeEventListener(evt, cb));\r\n    });\r\n    // now delegated events\r\n    ev.forEach(evt => {\r\n      if (listeners.has(evt)) {\r\n        let set = listeners.get(evt);\r\n        for (const item of set) {\r\n          if (cb === item.callback) {\r\n            // found it & remove it\r\n            set.delete(item);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Trigger specific event for this element\r\n   * @method EyeElement#trigger\r\n   * @param {string} ev \r\n   * @returns {EyeElement}\r\n   */\r\n  trigger(ev) {\r\n    this.each((elm, idx) => {\r\n      elm.dispatchEvent(getEvent(ev));\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Find one or multiple child elements by `selector`\r\n   * @method EyeElement#find\r\n   * @param {string} selector  \r\n   */\r\n  find(selector) {\r\n    let found = [];\r\n    this.each((elm, idx) => {\r\n      elm.querySelectorAll(selector).forEach(res => found.push(res));\r\n    });\r\n    return found.length == 1 ? found[0] : found;\r\n  }\r\n  /**\r\n   * Returns a clone of current selected element/s\r\n   * @method EyeElement#clone\r\n   * @param {HTMLElement} [parent] optionally append new clone to a parent\r\n   * @returns {Array<EyeElement>|EyeElement}\r\n   */\r\n  clone(parent) {\r\n    if (this.#raw instanceof NodeList) {\r\n      let list = [];\r\n      this.#raw.forEach(nd => {\r\n        list.push(nd.cloneNode(true));\r\n      });\r\n      if (parent instanceof HTMLElement || parent instanceof EyeElement) list.forEach(el => parent.append(el));\r\n      return list;\r\n    } else {\r\n      let clone = this.#raw.cloneNode(true);\r\n      if (parent instanceof HTMLElement || parent instanceof EyeElement) parent.append(clone);\r\n      return clone;\r\n    }\r\n  }\r\n  /**\r\n   * Compute DOMRect or style declaration of current element\r\n   * @method EyeElement#compute\r\n   * @param {\"bounds\" | \"style\"} type \r\n   * @returns {DOMRect|CSSStyleDeclaration}\r\n   */\r\n  compute(type) {\r\n    type = type || \"bounds\";\r\n    if (type === \"bounds\")\r\n      return (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw).getBoundingClientRect();\r\n    else if (type == \"style\")\r\n      return getComputedStyle(this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw)\r\n    console.error(`[EyeJS] unkown type \"${type}\" in function .compute, possible values are \"bounds\" \"style\"`);\r\n  }\r\n  /**\r\n   * Activate/disactive different pointer features such as PointerLock, pointerCapture...\r\n   * @method EyeElement#pointer\r\n   * @param {\"capture\" | \"lock\"} action \r\n   * @param {boolean} status \r\n   * @param {string} [pid]  \r\n   * @returns {EyeElement}\r\n   */\r\n  pointer(action, status, pid) {\r\n    this.each((elm, idx) => {\r\n      if (action === \"capture\") {\r\n        if (status === true) elm.setPointerCapture(pid);\r\n        else elm.releasePointerCapture(pid);\r\n      } else if (action === \"lock\") {\r\n        if (status === true) elm.requestPointerLock();\r\n        else document.exitPointerLock();\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Select a child of this element\r\n   * @method EyeElement#child\r\n   * @param {number} index \r\n   * @returns {EyeElement|null}\r\n   */\r\n  child(index) {\r\n    let it = (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw);\r\n    if (index === undefined) return it.children.length;\r\n    if (it.children[index]) return eye(it.children[index]);\r\n    return null;\r\n  }\r\n  /**\r\n   * Set/get the value of the current element\r\n   * @method EyeElement#val\r\n   * @param {*} value \r\n   * @returns \r\n   */\r\n  val(value) {\r\n    if (value != undefined) (this.#raw instanceof NodeList ? [...this.#raw.entries()] : [[0, this.#raw]]).forEach(([idx, a]) => a.value = this.#customSet.value(\"set\", value, a));\r\n    else {\r\n      let it = (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw);\r\n      return this.#customSet.value(\"get\", it.value, it);\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * Serialize this element to send it over network, returns 3 formats `json`, `url` & `fd`(formData) \r\n   * @method EyeElement#serialize\r\n   * @param {{inputs: Array<string>}} opts\r\n   * @returns {{json: Object, url: String, fd: FormData}}\r\n   */\r\n  serialize(opts) {\r\n    opts = opts || {};\r\n    let {\r\n      inputs = [\"input\", \"textarea\", \"select\"],\r\n    } = opts;\r\n    if (this.#raw instanceof HTMLElement) {\r\n      let out = {\r\n        json: {},\r\n        url: \"\",\r\n        fd: new FormData()\r\n      };\r\n      this.#raw.querySelectorAll(inputs.join(','))\r\n        .forEach((inp, i) => {\r\n          let name = inp.name || inp.dataset.name;\r\n          let value = inp.value || inp.textContent;\r\n          if (typeof opts[name] === \"function\") value = opts[name](inp);\r\n\r\n          if (inp.type == \"file\")\r\n            inp.files.forEach(file => {\r\n              out.fd.append(name, file);\r\n            });\r\n          else {\r\n            out.json[name] = value;\r\n            out.fd.append(name, value);\r\n          }\r\n        });\r\n\r\n      out.url = new URLSearchParams(out.json).toString();\r\n      return out;\r\n    } else console.warn(`[EyeJS] this is a multi selection, it's not serializable!`);\r\n  }\r\n  /**\r\n   * Redefine the way `.text` or `.val` set or get data to and from this element.\r\n   * @method EyeElement#redefine\r\n   * @param {\"text\" | \"value\"} type \r\n   * @param {(action: \"set\" | \"get\", value: *, elm: EyeElement) => *} process \r\n   * @returns {EyeElement}\r\n   */\r\n  redefine(type, process) {\r\n    if ([\"text\", \"value\"].includes(type) && typeof process == \"function\")\r\n      this.#customSet[type] = process;\r\n    return this;\r\n  }\r\n  /**\r\n   * Animate current object \r\n   * @method EyeElement#animate\r\n   * @param {Array<Keyframe>} keyframes \r\n   * @param {KeyframeAnimationOptions} opts \r\n   * @returns {Array<Animation>|Animation}\r\n   */\r\n  animate(keyframes, opts) {\r\n    /**\r\n     * @type {Array<Animation>}\r\n     */\r\n    let anmts = [];\r\n    opts.duration = opts.duration || 1000;\r\n    this.each((elm, i) => {\r\n      anmts.push(elm.#raw.animate(keyframes, opts));\r\n    });\r\n    return anmts.length == 1 ? anmts[0] : anmts;\r\n  }\r\n}\r\n/**\r\n * Creates or select nodes using css selectors, offering a pack of useful functions to use around your code!\r\n * @param {String} tag\r\n * @param {AttrMap} attrs\r\n * @param {Object} css CSS styles to be applied to the element.\r\n * @returns {EyeElement}\r\n */\r\nfunction eye(tag, attrs, css) {\r\n  if (typeof tag === \"string\" && tag.indexOf(\"model:\") === 0 || tag === \"model\") {\r\n    if (!attrs) return console.error(\"[EyeJS] Model creation requires parameter 'attr' as prototype, none delivered!\");\r\n\r\n    tag = tag.split(\":\");\r\n    let cls = [\"eye-model\"];\r\n    if (tag[1])\r\n      cls = cls.concat(tag[1].split(\" \").filter(a => a != \"\"));\r\n    // creating a model\r\n    let model = eye(\"<div>\", {\r\n      class: cls.join(\" \"),\r\n    });\r\n\r\n    let sets = cmcl(model, attrs);\r\n\r\n    /**\r\n     * @param {string} attrs\r\n     * @returns {ModelEyeElement}\r\n     */\r\n    return (attrs) => {\r\n      let copy = eye(model.clone(attrs?.parent));\r\n      // define & attach the refresh function\r\n      copy.refresh = function (attrs = {}) {\r\n        let def = attrs.default === false ? false : true;\r\n        sets.forEach((item) => {\r\n          if (def === true || (!def && attrs.hasOwnProperty(item.name)))\r\n            item.set(copy, attrs[item.name]);\r\n        });\r\n        return this;\r\n      };\r\n      return copy.refresh(attrs);\r\n    };\r\n  } else return new EyeElement(tag, attrs, css);\r\n}\r\n\r\n\r\n// gloablly exposed\r\nwindow.eye = eye;\n\nexport { eye as default };\n//# sourceMappingURL=eye.esm.js.map\n","import eye from \"eyeejs\";\r\n\r\n// will be set to empty functions\r\nconst hmNoop = () => { };\r\nlet btnsCounter = 0;\r\n// preparing the Qway functionalities\r\n\r\nconst templates = {\r\n  separator: eye(\"model:jmenu-menu-item separator\", {\r\n    \"<span>: _label\": {},\r\n  }),\r\n  normal: eye(\"model:jmenu-menu-item\", {\r\n    \"<div>.p1\": {},\r\n    \"<div>.p2\": {\r\n      \"<div>: _label\": {},\r\n      \"<div>: _accelerator\": {},\r\n    },\r\n    \"<div>.p3\": {},\r\n  }),\r\n};\r\n\r\nclass JmenuEvent extends CustomEvent {\r\n\r\n  #menu = null;\r\n  #which = null;\r\n\r\n  /**\r\n   * @param {\"open\" | \"close\"} type \r\n   * @param {Jmenu} menu \r\n   * @param {HTMLElement} target \r\n   */\r\n  constructor(type, menu, target) {\r\n    super(type, {\r\n      bubbles: false,\r\n      cancelable: false,\r\n    });\r\n\r\n    this.#menu = menu;\r\n    this.#which = target;\r\n  }\r\n\r\n  get menu() {\r\n    return this.#menu;\r\n  }\r\n\r\n  get which() {\r\n    return this.#which;\r\n  }\r\n}\r\n\r\n/**\r\n * Single button object to be used inside the Jmenu\r\n */\r\nclass JButton {\r\n\r\n  #state = true;\r\n  value = null;\r\n\r\n  /**\r\n   * @param {Jmenu} menu \r\n   * @param {buttonDef} btnDef \r\n   */\r\n  constructor(menu, btnDef) {\r\n\r\n    /**\r\n     * Reference to the menu holding this button\r\n     * @type {Jmenu}\r\n     */\r\n    this.menu = menu;\r\n\r\n    /**\r\n     * Actual button element\r\n     * @type {import(\"eyeejs\").EyeElement}\r\n     */\r\n    this.button = null;\r\n\r\n    /**\r\n     * Button's label or displayed text\r\n     * @type {string}\r\n     */\r\n    this.label = btnDef.label || `New Button ${++btnsCounter}`;\r\n\r\n    /**\r\n     * Callback to be executed when buttons is clicked\r\n     * @type {function}\r\n     */\r\n    this.func = btnDef.func || hmNoop;\r\n\r\n    /**\r\n     * Buttons type\r\n     * @type {\"button\" | \"separator\" | \"check-box\" | \"radio-button\" | \"slider\" | \"submenu\" | \"definition\"}\r\n     */\r\n    this.type = btnDef.type || \"button\";\r\n\r\n    /**\r\n     * Optional icon source to display on the button\r\n     * @type {string}\r\n     */\r\n    this.icon = btnDef.icon;\r\n\r\n    /**\r\n     * Accelerator is a shortcut to execute the button function\r\n     * @type {string}\r\n     */\r\n    this.accelerator = btnDef.accelerator || null;\r\n\r\n    /**\r\n     * Holds the entire definition of this button\r\n     * @type {buttonDef}\r\n     */\r\n    this.properties = btnDef;\r\n\r\n    /**\r\n     * Holds custom buttons and elements that differ between buttons types\r\n     */\r\n    this.runtime = {}\r\n\r\n    this.#create();\r\n  }\r\n\r\n\r\n  #create() {\r\n    // getting some variables\r\n    const spacing = this.menu.props.spacing;\r\n    let _this = this;\r\n\r\n    if (this.type == \"separator\") {\r\n      // creating a separator button\r\n      this.button = templates.separator({\r\n        parent: this.menu.elm,\r\n        _label: this.label,\r\n      });\r\n    } else {\r\n      // creating other type of buttons\r\n      let btn = this.button = templates.normal({\r\n        parent: this.menu.elm,\r\n        _label: this.label,\r\n        _accelerator: this.accelerator,\r\n      })\r\n\r\n      // we will be using this parts later\r\n      let head = btn.child(0);\r\n      let body = btn.child(1);\r\n      let tail = btn.child(2);\r\n\r\n      // buttons have some spacing in front \r\n      let fSpace = Array.isArray(spacing) ? spacing[0] : spacing,\r\n        lSpace = Array.isArray(spacing) ? spacing[1] : spacing;\r\n\r\n      // applying some style\r\n      head\r\n        .css(\"width\", `${fSpace}px`)\r\n        .css(\"backgroundImage\", this.icon ? `url(${this.icon})` : \"\");\r\n      tail.css(\"width\", `${lSpace}px`);\r\n\r\n      let bodyLabel = body.child(0);\r\n      let bodyAccel = body.child(1);\r\n      let submenuElm = null;\r\n\r\n      // preparing some variables\r\n      // those calls will be attached \r\n      // if needed\r\n      let onclick = null,\r\n        onmouseenter = null,\r\n        onmouseleave = null,\r\n        onwheel = null;\r\n      // depending on the type\r\n      switch (this.type) {\r\n        case \"button\":\r\n          ///////////////////////////////////// BUTTON\r\n          // onclick => execute callback\r\n          onclick = function (e) {\r\n            if (!(_this.func(_this, e) === false))\r\n              _this.menu.close(true);\r\n          }\r\n          break;\r\n        case \"check-box\":\r\n          ///////////////////////////////////// CHECKBOX\r\n          let label = Array.isArray(this.label) ? this.label : [this.label, this.label];\r\n          bodyLabel.text(label[0]);\r\n          let checkBoxMark = eye(\"<div>\", { class: \"jmenu-check-box-mark\" });\r\n          this.runtime[\"checkBoxMark\"] = checkBoxMark;\r\n\r\n          // defining a variable\r\n          this.selected = false;\r\n\r\n          onclick = function () {\r\n            // toggling check box\r\n            if (_this.selected === true) {\r\n              _this.selected = false;\r\n              checkBoxMark.remove();\r\n              body.child(0).text(label[0]);\r\n            } else {\r\n              _this.selected = true;\r\n              head.append(checkBoxMark);\r\n              body.child(0).text(label[1]);\r\n            }\r\n            if (!(_this.func(_this.selected, _this) === false))\r\n              _this.menu.close();\r\n          }\r\n          break;\r\n        case \"radio-button\":\r\n          ///////////////////////////////////// RADIOBUTTON\r\n          if (!this.properties.name)\r\n            throw new Error(\r\n              \"[JmenuJS] Error:\\n Radio boxes buttons definition must contain name attribute!\"\r\n            );\r\n          if (!this.menu.radios[this.properties.name]) {\r\n            this.menu.radios[this.properties.name] = {\r\n              ball: eye(\"<div>\", { class: \"jmenu-radio-button-mark\" }),\r\n            };\r\n            head.append(this.menu.radios[this.properties.name].ball);\r\n          }\r\n\r\n          if (this.properties.default === true) head.append(this.menu.radios[this.properties.name].ball);\r\n          onclick = function () {\r\n            let call = _this.menu.radios[_this.properties.name];\r\n            if (call.ball) head.append(call.ball);\r\n            if (!(_this.func(_this.label, _this) === false))\r\n              _this.menu.close();\r\n          }\r\n          break;\r\n        case \"definition\":\r\n          ///////////////////////////////////// DEFINITION\r\n          let defBloc = eye(\"<div>\", {\r\n            class: \"jmenu-definition-box\",\r\n            parent: document.body,\r\n            html: this.properties.def,\r\n          }, { display: \"none\" });\r\n          this.runtime[\"defBloc\"] = defBloc;\r\n\r\n          bodyAccel.text(\"definition\");\r\n\r\n          // mousenter => show definition\r\n          onmouseenter = function () {\r\n            let b = this.getBoundingClientRect();\r\n            let x = b.left + b.width + 5,\r\n              y = b.top;\r\n            if (window.innerWidth - (b.left + b.width) < 200) x = b.left - 205;\r\n\r\n            defBloc\r\n              .css(\"left\", `${x}px`)\r\n              .css(\"top\", `${y}px`)\r\n              .css(\"display\", \"inline-block\");\r\n          };\r\n\r\n          // mouseleave => hide definition\r\n          onmouseleave = () => defBloc.css(\"display\", \"none\");\r\n\r\n\r\n          break;\r\n        case \"slider\":\r\n          ///////////////////////////////////// SLIDER\r\n          let format = this.properties.format = this.properties.format || \"_value_\";\r\n          let step = this.properties.step = this.properties.step || 1;\r\n          let range = this.properties.range = this.properties.range || [0, 100];\r\n          btn.class(\"+jmenu-slider\");\r\n          bodyAccel.class(\"+jmenu-slider-btns\");\r\n          let decrease = eye(\"<div>\", {\r\n            class: \"jmenu-slider-btn\",\r\n          });\r\n          bodyAccel.append(decrease)\r\n          let show = eye(\"<div>\", {\r\n            class: \"jmenu-slider-show\",\r\n          });\r\n          bodyAccel.append(show)\r\n          let increase = eye(\"<div>\", {\r\n            class: \"jmenu-slider-btn\",\r\n          });\r\n          bodyAccel.append(increase)\r\n\r\n          // the plus and minus icons\r\n          let minus = eye(\"<div>\", { class: \"jmenu-minus\", parent: decrease });\r\n          let incrs = eye(\"<div>\", { class: \"jmenu-plus1\", parent: increase });\r\n          let decrs = eye(\"<div>\", { class: \"jmenu-plus2\", parent: increase });\r\n\r\n          this.value = this.properties.default || range[0];\r\n          show.text(format.replace(\"_value_\", this.value));\r\n\r\n          // actual work\r\n          decrease.click(function () {\r\n            if (!_this.#state) return;\r\n            _this.value = Math.max(_this.value - step, range[0]);\r\n            show.text(format.replace(\"_value_\", _this.value));\r\n            _this.func(_this.value, _this);\r\n          });\r\n          increase.click(function () {\r\n            if (!_this.#state) return;\r\n            _this.value = Math.min(_this.value + step, range[1]);\r\n            show.text(format.replace(\"_value_\", _this.value));\r\n            _this.func(_this.value, _this);\r\n          });\r\n\r\n          // can control with wheel?\r\n          if (this.properties.wheel === true)\r\n            onwheel = function (e) {\r\n              e.preventDefault();\r\n              if (e.deltaY >= 0) decrease.click();\r\n              else increase.click();\r\n            }\r\n          break;\r\n        case \"submenu\":\r\n          ///////////////////////////////////// SUBMENU\r\n          bodyAccel.class(\"+jmenu-menu-item-arrow\");\r\n          submenuElm = new Jmenu(this.properties.submenu, {\r\n            action: \"none\", // pass anything so no event is assigned\r\n            parent: this.menu,\r\n            alignToTarget: \"left\",\r\n            alignToOffset: 2,\r\n          });\r\n          this.menu.submenus.push(submenuElm);\r\n\r\n          // mouseenter => open submenu\r\n          onmouseenter = function () {\r\n            this.tm = setTimeout(function () {\r\n              let p = tail.compute();\r\n              // lock current menu\r\n              submenuElm.popup({ x: p.left + p.width - 3, y: p.top }, btn.raw);\r\n            }, 500);\r\n          }\r\n\r\n          // mouseleave => stop timer\r\n          onmouseleave = function () {\r\n            if (this.tm) clearTimeout(this.tm);\r\n          };\r\n          break;\r\n      }\r\n\r\n      // attaching events\r\n      if (typeof onclick == \"function\") btn.click((e) => { if (_this.#state) onclick(e) });\r\n      if (typeof onmouseenter == \"function\") btn.mouseenter(onmouseenter);\r\n      if (typeof onmouseleave == \"function\") btn.mouseleave(onmouseleave);\r\n      if (typeof onwheel == \"function\") btn.on(\"wheel\", onwheel);\r\n\r\n      // general events\r\n      btn.mouseenter(function () {\r\n        // closing any opened tree\r\n        for (let i = 0; i < _this.menu.submenus.length; i++) {\r\n          _this.menu.submenus[i].close();\r\n        }\r\n      })\r\n\r\n\r\n      if (this.properties.disabled) this.disable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set/Get the value of a slider button, respecting range property.\r\n   * @param {number} v\r\n   */\r\n  setValue(v) {\r\n    if (this.type == \"slider\" && typeof v == \"number\") {\r\n      this.value = v < this.properties.range[0] ? this.properties.range[0] : v > this.properties.range[1] ? this.properties.range[1] : v;\r\n      this.button.child(1).child(1).child(1).text(this.properties.format.replace(\"_value_\", this.value))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enable button\r\n   */\r\n  enable() {\r\n    this.#state = true;\r\n\r\n    this.button.attr(\"style\", false);\r\n  }\r\n\r\n  /**\r\n   * Disable button\r\n   */\r\n  disable() {\r\n    this.#state = false;\r\n    this.button.css(\"background-color\", \"transparent\")\r\n      .css(\"color\", \"gray\")\r\n      .css(\"pointer-action\", \"none\")\r\n      .css(\"cursor\", \"default\");\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @typedef {Object} buttonDef\r\n * @property {string} label text to be displayed on the button\r\n * @property {string} type possible types `button`(def) `separator` `radio` `check` `img` `input`\r\n * @property {(buttonDef)=>} func callback to be executed when button clicked\r\n * @property {string} name obliged for radio element, to maintain the relation between\r\n * @property {string} allowed specify the allowed values within a dataset button\r\n * @property {string} def definition text of a `definition` button\r\n * @property {string} accelerator command or combo that perform the same task as the button `ctrl+v` `ctrl+shift+h`...\r\n * @property {Array<number,number>} range Defines a `slider` value range [5,150], [80,120], [0,50]..\r\n * @property {number} step the value used when stepping a `slider`, for each click the value increase or decrease by `step`\r\n * @property {string} format a way to display the value on button, a string that must contain _value_ that will be replaced by the actual value\r\n * @property {boolean} wheel whether or not to include wheel action for `slider`s\r\n * @property {string} src the source of a `img-preview` button\r\n * @property {boolean} default set as radio element default value\r\n * @property {Array<buttonDef>} submenu a submenu element for that button\r\n * @property {boolean} disabled whether or not button is disabled by default\r\n * @property {string} icon optionally set an icon for the button\r\n */\r\n\r\n/**\r\n * @typedef {Object} menuProperties\r\n * @property {HTMLElement} target the target element that supposed to launch the menu\r\n * @property {string} action the action that will trigger menu appearance\r\n * @property {number|Array<number>} bars makes some spaces inside the menu in top and bottom\r\n * @property {string} id possible ID to set the menu\r\n * @property {number|Array<number>} spacing defines the buttons spacing, indenting and revindenting\r\n * @property {boolean | \"left\" | \"right\"} alignToTarget align menu with the target\r\n * @property {number} alignToOffset offset alignment by specific value\r\n * \r\n * \r\n */\r\n\r\n/**\r\n * Creates and handle context menu with ease\r\n * @author Yousef Neji\r\n */\r\nclass Jmenu {\r\n\r\n  /**\r\n   * Defintion object\r\n   * @type {Array<buttonDef>}\r\n   */\r\n  def = null;\r\n\r\n  /**\r\n   * Properties of the menu\r\n   * @type {menuProperties}\r\n   */\r\n  props = {};\r\n\r\n  /**\r\n   * Actual html menu element\r\n   * @type {HTMLDivElement}\r\n   */\r\n  elm = null;\r\n\r\n  /**\r\n   * Target is the element that supposed to launch/popup the menu\r\n   * @type {HTMLElement}\r\n   */\r\n  target = window;\r\n\r\n  /**\r\n   * List of buttons forming this menu\r\n   * @type {Array<JButton>}\r\n   */\r\n  #buttons = [];\r\n\r\n  /**\r\n   * Current target that poped up this menu\r\n   * @type {HTMLElement}\r\n   */\r\n  #currentTarget = null;\r\n\r\n  /**\r\n   * Reference to the radio elements used\r\n   */\r\n  radios = {};\r\n\r\n  /**\r\n   * Reference to the submenus elements used\r\n   * @type {Array<Jmenu>}\r\n   */\r\n  submenus = [];\r\n\r\n  /**\r\n   * Values auto detected to configure the menu, please don't modify it otherwise menu we appear as expected\r\n   */\r\n  computed = {\r\n    menuHeight: 0,\r\n    menuWidth: 0,\r\n    parent: null,\r\n  };\r\n\r\n  /**\r\n   * Used to prevent user interactions while menu opened\r\n   * @type {import(\"eyeejs\").EyeElement}\r\n   */\r\n  untouchable = null;\r\n\r\n\r\n  #events = {};\r\n\r\n  /**\r\n   * @param {Array<buttonDef>} def\r\n   * @param {menuProperties} props\r\n   */\r\n  constructor(def, props) {\r\n\r\n    this.def = def;\r\n\r\n    if (!props) props = {};\r\n    let {\r\n      target = window,\r\n      action = \"contextmenu\",\r\n      bars = 5,\r\n      spacing = 30,\r\n      parent = null,\r\n      alignToTarget = null,\r\n      alignToOffset = 0,\r\n    } = props,\r\n      _this = this;\r\n\r\n    this.target = target ?? window;\r\n    this.computed.parent = parent;\r\n    this.props = {\r\n      target,\r\n      action,\r\n      bars,\r\n      spacing,\r\n      alignToTarget,\r\n      alignToOffset,\r\n    };\r\n\r\n    if (parent) this.untouchable = parent.untouchable;\r\n    else {\r\n      this.untouchable = eye(\"<div>\", {\r\n        class: \"jmenu-untouchable\",\r\n        parent: document.body,\r\n      });\r\n      this.untouchable.mousedown(function () {\r\n        _this.close();\r\n      });\r\n    }\r\n\r\n    this.create();\r\n    this.bindEvents();\r\n    this.#compute();\r\n  }\r\n\r\n  /**\r\n   * Which html element 'cause the menu to popup\r\n   */\r\n  get which() {\r\n    return this.#currentTarget\r\n  }\r\n\r\n  /**\r\n   * Bind different events\r\n   */\r\n  bindEvents() {\r\n    let actions = (this.props.action ?? \"contextmenu\").split(\" \");\r\n    let _this = this;\r\n\r\n    actions.forEach((action) => {\r\n      if (typeof _this.target == \"string\")\r\n        window.addEventListener(action, function (e) {\r\n          if (e.target.closest(_this.target)) {\r\n            e.preventDefault();\r\n            _this.popup({ x: e.clientX, y: e.clientY }, e.target);\r\n          }\r\n        })\r\n      else _this.target.addEventListener(action, function (e) {\r\n        e.preventDefault();\r\n        _this.popup({ x: e.clientX, y: e.clientY }, e.target);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create the menu\r\n   */\r\n  create() {\r\n    let elm = eye(\"<div>\", {\r\n      class: [\"jmenu-menu\", \"unselect\"],\r\n      parent: document.body,\r\n    }),\r\n      _this = this;\r\n    this.elm = elm;\r\n\r\n    // include some bar spacings\r\n    let topBar = 0,\r\n      botBar = 0;\r\n    if (typeof this.props.bars == \"number\") topBar = botBar = this.props.bars;\r\n    else if (Array.isArray(this.props.bars)) {\r\n      topBar = this.props.bars[0];\r\n      botBar = this.props.bars[1];\r\n    }\r\n    elm.css(\"padding-top\", topBar + \"px\");\r\n    elm.css(\"padding-bottom\", botBar + \"px\");\r\n\r\n    // hide by default\r\n    this.elm.css(\"display\", \"none\");\r\n\r\n    // creating buttons\r\n    this.def.forEach((button) => {\r\n      _this.addButton(button);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add new button to the menu\r\n   * @param {buttonDef} button\r\n   */\r\n  addButton(button) {\r\n    let btn = new JButton(this, button);\r\n    this.#buttons.push(btn);\r\n  }\r\n\r\n  get buttons() {\r\n    return this.#buttons;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} pos the position in which to popup in\r\n   * @param {number} pos.x x coordination\r\n   * @param {number} pos.y y coordination\r\n   * @param {HTMLElement} [target] the element that 'causing the popup if any\r\n   */\r\n  popup(pos, target) {\r\n    let { x, y } = pos;\r\n    let alignment = this.props.alignToTarget;\r\n    this.#currentTarget = target;\r\n\r\n    if ([true, \"left\", \"right\"].includes(alignment)) {\r\n      // perform stick display\r\n      let closerBy = this.props.alignToOffset;\r\n      let box = target.getBoundingClientRect();\r\n\r\n      // adjust so the menu stays inside screen\r\n      if (\r\n        [true, \"left\"].includes(alignment) &&\r\n        box.left + box.width + this.computed.menuWidth > window.innerWidth\r\n      ) alignment = \"right\";\r\n      else if (\r\n        alignment == \"right\" &&\r\n        box.left - this.computed.menuWidth < 0\r\n      ) alignment = \"left\";\r\n\r\n      // apply X position\r\n      if (alignment === \"left\" || alignment === true)\r\n        x = box.left + box.width + 2 - closerBy;\r\n      else if (alignment === \"right\")\r\n        x = box.left - this.computed.menuWidth - 2 + closerBy;\r\n\r\n      // adjust Y position\r\n      if (box.top + this.computed.menuHeight > window.innerHeight)\r\n        y = box.top + box.height - this.computed.menuHeight;\r\n      else y = box.top;\r\n\r\n\r\n    } else {\r\n      // if no stick option then perform normal position calculations\r\n      if (y + this.computed.menuHeight > window.innerHeight - 20)\r\n        y = window.innerHeight - (20 + this.computed.menuHeight);\r\n\r\n      if (x + this.computed.menuWidth > window.innerWidth - 20)\r\n        x = window.innerWidth - (20 + this.computed.menuWidth);\r\n    }\r\n\r\n    // finally apply style\r\n    this.elm.css(\"left\", x + \"px\");\r\n    this.elm.css(\"top\", y + \"px\");\r\n    this.elm.css(\"position\", \"fixed\");\r\n    this.elm.css(\"display\", \"inline-block\");\r\n    if (this.untouchable) this.untouchable.show(\"inline-block\");\r\n    this.trigger('open', new JmenuEvent(\"open\", this, target));\r\n  }\r\n\r\n  /**\r\n   * Close the menu\r\n   * @param {boolean} closeAllMenu\r\n   * @returns\r\n   */\r\n  close(closeAllMenu) {\r\n    if (closeAllMenu && this.computed.parent)\r\n      return this.computed.parent.close(true); // this will start closing the total menu\r\n\r\n    if (this.submenus.length != 0) {\r\n      this.submenus.forEach((submenu) => submenu.close());\r\n    }\r\n    this.elm.css(\"display\", \"none\");\r\n    if (!this.computed.parent) this.untouchable.hide();\r\n\r\n    this.trigger('close', new JmenuEvent(\"close\", this, window));\r\n  }\r\n\r\n  /**\r\n   * Perform some computation tasks registering some values\r\n   */\r\n  #compute() {\r\n    // perform some need calculations\r\n\r\n    // away from the screen\r\n    this.elm.css(\"left\", -9999);\r\n    this.elm.css(\"position\", \"fixed\");\r\n    this.elm.css(\"display\", \"inline-block\");\r\n\r\n    let declaration = this.elm.compute();\r\n    this.computed.menuHeight = declaration.height;\r\n    this.computed.menuWidth = declaration.width;\r\n\r\n    this.elm.css(\"display\", \"none\");\r\n  }\r\n\r\n  /**\r\n   * Hide the button at the give index\r\n   * @param {number} index\r\n   */\r\n  hideButton(index) {\r\n    if (this.#buttons[index]) this.#buttons[index].button.hide();\r\n  }\r\n\r\n  /**\r\n   * Show the button at the give index\r\n   * @param {number} index\r\n   */\r\n  showButton(index) {\r\n    if (this.#buttons[index]) this.#buttons[index].button.show(\"flex\");\r\n  }\r\n\r\n  /**\r\n   * Enable button at the given index\r\n   * @param {number} index \r\n   */\r\n  enableButton(index) {\r\n    if (this.#buttons[index]) this.#buttons[index].enable();\r\n  }\r\n\r\n  /**\r\n   * Disable button at the given index\r\n   * @param {number} index \r\n   */\r\n  disableButton(index) {\r\n    if (this.#buttons[index]) this.#buttons[index].disable();\r\n  }\r\n\r\n  /**\r\n   * Modify a button property value\r\n   * @param {number} index \r\n   * @param {\"label\" | \"value\" | \"icon\" | \"accelerator\" | \"definition\"} prop \r\n   * @param {*} value \r\n   */\r\n  setButtonProp(index, prop, value) {\r\n    if (this.buttons[index]) {\r\n      let btn = this.buttons[index];\r\n      switch (prop) {\r\n        case \"label\":\r\n          btn.label = value;\r\n          btn.button.refresh({\r\n            default: false,\r\n            _label: value\r\n          });\r\n          break;\r\n        case \"value\":\r\n          btn.setValue(value);\r\n          break;\r\n        case \"icon\":\r\n          if (btn.type != \"separator\")\r\n            btn.button.child(0).css('backgroundImage', value);\r\n          break;\r\n        case \"accelerator\":\r\n          if (![\"slider\",\"separator\",\"definition\"].includes(btn.type))\r\n            btn.button.refresh({\r\n              default: false,\r\n              _accelerator: value\r\n            })\r\n          break;\r\n        case \"definition\":\r\n          if (btn.type == \"definition\")\r\n            btn.runtime[\"defBloc\"].html(btn.properties.def = value);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attach an event listener to certain event\r\n   * @param {\"open\" | \"close\"} ev \r\n   * @param {(jev: JmenuEvent)=>void} cb \r\n   */\r\n  on(ev, cb) {\r\n    if (!Array.isArray(this.#events[ev])) this.#events[ev] = [];\r\n\r\n    this.#events[ev].push(cb);\r\n  }\r\n\r\n  /**\r\n   * Remove an attached event listener\r\n   * @param {string} ev \r\n   * @param {function} cb \r\n   */\r\n  off(ev, cb) {\r\n    if (Array.isArray(this.#events[ev])) {\r\n      let i = this.#events[ev].findIndex(cbl => cb === cbl);\r\n      if (i != -1)\r\n        this.#events[ev].splice(i, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger an event handler\r\n   * @param {string} ev \r\n   * @param  {...any} args \r\n   */\r\n  trigger(ev, ...args) {\r\n    let _this = this;\r\n    if (Array.isArray(this.#events[ev]))\r\n      this.#events[ev].forEach(cb => cb.call(_this, ...args));\r\n  }\r\n}\r\n\r\n// the css file must be included\r\nconsole.warn(\r\n  \"[JmenuJS] Don't forget to link the css file bundled with the library to get full functional menus!\"\r\n);\r\n\r\nexport default Jmenu;\r\n"],"names":["events","htmlElements","flat","word","n","i","length","t","toUpperCase","toLowerCase","localdata","WeakMap","cmcl","parent","layer","obj","key","subcontent","def","_set","split","tagName","cls","_set_name","_set_default","map","a","trim","elm","eye","class","data","value","undefined","push","name","set","find","textContent","Array","concat","delegationEvents","normalSetterGetter","action","v","EyeElement","raw","dlgListeners","Map","customSet","text","constructor","selector","attrs","css","_this","this","HTMLElement","includes","document","createElement","substring","s","slice","querySelectorAll","item","handler","e","type","listeners","_etarget","target","me","has","cbs","get","forEach","callback","closest","each","idx","parentElm","classList","add","apply","filter","innerHTML","k","dataset","setAttribute","indexOf","style","append","ev","addEventListener","cb","on","trigger","NodeList","entries","html","out","attr","val","getAttribute","actions","remove","toggle","contains","v1","v2","replace","show","display","hide","opacity","pos","nodes","isArray","console","warn","itm","after","before","replaceWith","elms","par","Error","parentElement","is","node","check","isConnected","isSameNode","isEqualNode","error","arg2","arg3","outsider","evt","Set","off","removeEventListener","delete","dispatchEvent","options","MouseEvent","PointerEvent","KeyboardEvent","FocusEvent","Event","WheelEvent","ClipboardEvent","UIEvent","CustomEvent","getEvent","found","res","clone","list","nd","cloneNode","el","compute","getBoundingClientRect","getComputedStyle","pointer","status","pid","setPointerCapture","releasePointerCapture","requestPointerLock","exitPointerLock","child","index","it","children","serialize","opts","inputs","json","url","fd","FormData","join","inp","files","file","URLSearchParams","toString","redefine","process","animate","keyframes","anmts","duration","tag","model","sets","copy","refresh","default","hasOwnProperty","window","hmNoop","btnsCounter","templates","separator","normal","JmenuEvent","menu","which","super","bubbles","cancelable","JButton","state","btnDef","button","label","func","icon","accelerator","properties","runtime","create","spacing","props","_label","btn","_accelerator","head","body","tail","fSpace","lSpace","bodyLabel","bodyAccel","submenuElm","onclick","onmouseenter","onmouseleave","onwheel","close","checkBoxMark","selected","radios","ball","call","defBloc","b","x","left","width","y","top","innerWidth","format","step","range","decrease","increase","click","Math","max","min","wheel","preventDefault","deltaY","Jmenu","submenu","alignToTarget","alignToOffset","submenus","tm","setTimeout","p","popup","clearTimeout","mouseenter","mouseleave","disabled","disable","setValue","enable","buttons","currentTarget","computed","menuHeight","menuWidth","untouchable","bars","mousedown","bindEvents","clientX","clientY","topBar","botBar","addButton","alignment","closerBy","box","innerHeight","height","closeAllMenu","declaration","hideButton","showButton","enableButton","disableButton","setButtonProp","prop","findIndex","cbl","splice","args"],"mappings":"sOAsFA,MAAMA,EAAS,CAEb,QACA,WACA,YACA,UACA,YACA,aACA,aACA,YACA,WACA,cAGA,UACA,WACA,QAGA,QACA,OACA,UACA,WAGA,SACA,SACA,QACA,QACA,SAGA,aACA,WACA,YACA,cAGA,cACA,YACA,cACA,eACA,eACA,gBAGA,YACA,UACA,YACA,WACA,YACA,OAGA,SACA,SACA,OACA,eACA,SAGA,OACA,QACA,QACA,eACA,aAGA,OACA,MACA,QAGA,iBACA,eACA,qBACA,kBACA,gBAGA,qBACA,kBACA,iBAGA,QACA,aACA,YAGIC,EAAe,CAEnB,SACA,SACA,SACA,SACA,UACA,UAGA,SACA,YACA,YACA,UACA,WACA,WACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,QACA,YAGA,eACA,OACA,QACA,OACA,OACA,eACA,WACA,OACA,OACA,OACA,MACA,QACA,OAGA,MACA,SACA,MACA,QACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,MACA,QACA,SACA,MACA,OACA,OACA,SACA,MACA,SACA,UACA,SACA,WACA,QACA,QACA,SACA,MACA,QACA,QAGA,SACA,UACA,QACA,QACA,UACA,UAGA,UACA,WACA,WACA,YACA,WACA,WAGA,WACA,aACA,WAGA,QACA,QAGA,YACA,QACA,aACA,UACA,UACA,OACA,UACA,OACA,UACA,OAGA,WACA,aACA,aACA,SACA,UACA,UACA,WACA,UACA,aACA,WACA,WACA,aACA,WACA,aAGA,YACA,WACA,YAGA,SACA,cAGF,SAASC,EAAKC,GACZ,IAAIC,EAAI,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,MAAME,EAAIJ,EAAKE,GACXE,IAAMA,EAAEC,eAAiBD,IAAMA,EAAEE,cAAeL,GAAK,IAAMG,EAC1DH,GAAKG,CACX,CACD,OAAOH,EAAEK,aACX,CAEA,MAAMC,EAAY,IAAIC,QAQtB,SAASC,EAAKC,EAAQC,GACpB,IAAIC,EAAM,GACV,IAAK,MAAMC,KAAOF,EAAO,CACvB,MAAMG,EAAa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","x_google_ignoreList":[0]}